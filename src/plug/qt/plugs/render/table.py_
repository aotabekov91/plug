from gizmo.utils import tag
from plug.qt.plugs.render import Render
from gizmo.vimo.view import ListWidgetView

class TableView(Render):

    kind=None
    view_prop='canLocate'
    locator_kind='position'
    model_prop=['isTableModel']
    view_class=ListWidgetView

    def setup(self):

        super().setup()
        self.app.moder.typeChanged.connect(
                self.setType)

    def open(self, model, **kwargs):

        v=self.getView(model, **kwargs)
        self.setCurrentView(v, **kwargs)

    def isCompatible(self, source):
        raise


    def setType(self, t):

        v=self.checkView(t)
        if v:
            m=self.getModel(v)
            self.m_view.setModel(m)

    def checkView(self, t=None):

        t = t or self.app.moder.type()
        v=t.view()
        if v and v.check(self.view_prop):
            return v

    def open(self):

        i=self.m_view.currentItem()
        t=self.app.moder.type()
        v=t.view()
        if i and v:
            k=self.locator_kind
            d=i.element().data()
            v.openLocator(d, k)

    def delete(self):

        t=self.app.moder.type()
        m=self.getModel(t.view())
        i=self.m_view.currentItem()
        if i and m:
            e=i.element()
            m.removeElement(e)

    def toggleRender(self):

        if self.rendering:
            self.rendering=False
            self.app.uiman.deactivate(
                    self, self.m_view)
        else:
            self.rendering=True
            self.setCurrentView(self.m_view)
